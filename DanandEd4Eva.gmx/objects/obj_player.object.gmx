<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>NO_STARS=13;
WIDTH=200;
LENGTH=200;
X_STEP=20;
Y_STEP=20;
LINE_WIDTH=10;
enum state{
  ORION_STATE1,
  ORION_STATE2
};
curr_state=state.ORION_STATE1;
//shape1, state 1
grd_shape1=ds_grid_create(2,NO_STARS);
//first col is x co-ord, second is y
ds_grid_set(grd_shape1,0,0,4);
ds_grid_set(grd_shape1,1,0,1);

ds_grid_set(grd_shape1,0,1,1);
ds_grid_set(grd_shape1,1,1,5);
ds_grid_set(grd_shape1,0,2,3);
ds_grid_set(grd_shape1,1,2,12);

ds_grid_set(grd_shape1,0,3,6);
ds_grid_set(grd_shape1,1,3,3);
ds_grid_set(grd_shape1,0,4,10);
ds_grid_set(grd_shape1,1,4,5);
ds_grid_set(grd_shape1,0,5,14);
ds_grid_set(grd_shape1,1,5,4);

ds_grid_set(grd_shape1,0,6,12);
ds_grid_set(grd_shape1,1,6,14);
ds_grid_set(grd_shape1,0,7,11);
ds_grid_set(grd_shape1,1,7,15);
ds_grid_set(grd_shape1,0,8,10);
ds_grid_set(grd_shape1,1,8,16);

ds_grid_set(grd_shape1,0,9,15);
ds_grid_set(grd_shape1,1,9,17);
ds_grid_set(grd_shape1,0,10,18);
ds_grid_set(grd_shape1,1,10,20);

ds_grid_set(grd_shape1,0,11,10);
ds_grid_set(grd_shape1,1,11,20);
ds_grid_set(grd_shape1,0,12,10);
ds_grid_set(grd_shape1,1,12,24);

//shape1, state 2
grd_shape1_state2=ds_grid_create(2,NO_STARS);
//first col is x co-ord, second is y
ds_grid_set(grd_shape1_state2,0,0,20);
ds_grid_set(grd_shape1_state2,1,0,10);

ds_grid_set(grd_shape1_state2,0,1,14);
ds_grid_set(grd_shape1_state2,1,1,10);
ds_grid_set(grd_shape1_state2,0,2,6);
ds_grid_set(grd_shape1_state2,1,2,12);

ds_grid_set(grd_shape1_state2,0,3,6);
ds_grid_set(grd_shape1_state2,1,3,3);
ds_grid_set(grd_shape1_state2,0,4,10);
ds_grid_set(grd_shape1_state2,1,4,5);
ds_grid_set(grd_shape1_state2,0,5,14);
ds_grid_set(grd_shape1_state2,1,5,4);

ds_grid_set(grd_shape1_state2,0,6,12);
ds_grid_set(grd_shape1_state2,1,6,14);
ds_grid_set(grd_shape1_state2,0,7,11);
ds_grid_set(grd_shape1_state2,1,7,15);
ds_grid_set(grd_shape1_state2,0,8,10);
ds_grid_set(grd_shape1_state2,1,8,16);

ds_grid_set(grd_shape1_state2,0,9,15);
ds_grid_set(grd_shape1_state2,1,9,17);
ds_grid_set(grd_shape1_state2,0,10,18);
ds_grid_set(grd_shape1_state2,1,10,20);

ds_grid_set(grd_shape1_state2,0,11,10);
ds_grid_set(grd_shape1_state2,1,11,20);
ds_grid_set(grd_shape1_state2,0,12,10);
ds_grid_set(grd_shape1_state2,1,12,24);

if(curr_state=state.ORION_STATE1)
  curr_grd=grd_shape1;
if(curr_state=state.ORION_STATE2)
  curr_grd=grd_shape1_state2;

grd_shape1_lines=ds_grid_create(2,14);
//each col represents a row in the grd_shape grid
ds_grid_set(grd_shape1_lines,0,0,0);//so we want the first 
ds_grid_set(grd_shape1_lines,1,0,1);//and second stars to be linked by a line
ds_grid_set(grd_shape1_lines,0,1,1);
ds_grid_set(grd_shape1_lines,1,1,2);
ds_grid_set(grd_shape1_lines,0,2,2);
ds_grid_set(grd_shape1_lines,1,2,3);
ds_grid_set(grd_shape1_lines,0,3,3);
ds_grid_set(grd_shape1_lines,1,3,4);
ds_grid_set(grd_shape1_lines,0,4,2);
ds_grid_set(grd_shape1_lines,1,4,8);
ds_grid_set(grd_shape1_lines,0,5,8);
ds_grid_set(grd_shape1_lines,1,5,11);
ds_grid_set(grd_shape1_lines,0,6,11);
ds_grid_set(grd_shape1_lines,1,6,12);
ds_grid_set(grd_shape1_lines,0,7,6);
ds_grid_set(grd_shape1_lines,1,7,9);
ds_grid_set(grd_shape1_lines,0,8,9);
ds_grid_set(grd_shape1_lines,1,8,10);
ds_grid_set(grd_shape1_lines,0,9,6);
ds_grid_set(grd_shape1_lines,1,9,7);
ds_grid_set(grd_shape1_lines,0,10,7);
ds_grid_set(grd_shape1_lines,1,10,8);
ds_grid_set(grd_shape1_lines,0,11,4);
ds_grid_set(grd_shape1_lines,1,11,5);
ds_grid_set(grd_shape1_lines,0,12,4);
ds_grid_set(grd_shape1_lines,1,12,6);

/*
//plot stars
for (i=0;i&lt;NO_STARS;i++){
  x=ds_grid_get(curr_grd,0,i) * X_STEP;
  y=ds_grid_get(curr_grd,1,i) * Y_STEP;
  instance_create(x,y,obj_star);
}*/

//draw_line_width(1,2000,1,2000,LINE_WIDTH*100);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//plot lines
for (i=0;i&lt;14;i++){
  point1=ds_grid_get(grd_shape1_lines,0,i);
  point2=ds_grid_get(grd_shape1_lines,1,i);
  x1=ds_grid_get(curr_grd,0,point1) * X_STEP;
  y1=ds_grid_get(curr_grd,1,point1) * Y_STEP;
  x2=ds_grid_get(curr_grd,0,point2) * X_STEP;
  y2=ds_grid_get(curr_grd,1,point2) * Y_STEP;
  draw_set_colour(c_black);
  draw_line_width(x1,y1,x2,y2,5);
}

//plot stars
for (i=0;i&lt;NO_STARS;i++){
  draw_set_color(c_white);
  x=ds_grid_get(curr_grd,0,i) * X_STEP;
  y=ds_grid_get(curr_grd,1,i) * Y_STEP;
  draw_circle(x,y,5,false);
  //instance_create(x,y,obj_star);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
